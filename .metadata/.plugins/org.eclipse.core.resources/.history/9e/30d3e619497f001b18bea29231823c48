[comment encoding = UTF-8 /]
[module toDOT('http://simplepdl')]

[template public processToDOT(aProcess : Process)]
[comment @main/]
[file (aProcess.name + '.dot', false, 'UTF-8')]
digraph [aProcess.name/] {
[let wds : OrderedSet(WorkDefinition) = aProcess.getWDs() ] 
	[if (wds->size() > 0)]
		[for (wd : WorkDefinition | wds)]
			[wd.toDOT()/]
		[/for]
	[/if]
[/let]
}
[/template]

[query public getWDs(p: Process) : OrderedSet(WorkDefinition) = 
	p.processElements->select( e | e.oclIsTypeOf(WorkDefinition) )
		->collect( e | e.oclAsType(WorkDefinition) )
		->asOrderedSet()
/]

[query public toState(link: WorkSequenceType) : String =
	if link = WorkSequenceType::startToStart then
		's2s'
	else
		if link = WorkSequenceType::startToFinish then
			's2f'
		else
			if link = WorkSequenceType::finishToStart then
				'f2s'
			else
				'f2f'
			endif
		endif
	endif
/]

[template public toDOT(wd : WorkDefinition) post (trim()) ]
[for (ws: WorkSequence | wd.linksToPredecessors)]
	[wd.name /] -> [ws.predecessor.name /] '['arrowhead=vee label=[ws.linkType.toState()/]]
[/for]

[wd.name /] [for (ws: WorkSequence | wd.linksToPredecessors)
		    before (' requires ') separator (', ') after('.')
][ws.predecessor.name /] to be [ws.linkType.toState()
/][/for]
[/template]
